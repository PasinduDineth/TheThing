Option 1: Use the Supabase Dashboard

    Go to your project → Authentication → Users tab.

    Click "Add user".

    Enter:

        Email (e.g., test@example.com)

        Password (e.g., password123)

    Click "Create user".

Once created, you'll see the UUID under the id column — that’s what you’ll use in the profiles table.

INSERT INTO profiles (
  id,
  full_name,
  email,
  photo_url,
  partner_id,
  invitation_code,
  is_active
) VALUES (
  'user_id-from-auth.users',
  'John Doe',
  'john@example.com',
  'https://example.com/john.jpg',
  NULL,
  'abc123',
  true
);
---------------------------------


create all tables
-- Create 'profiles' table
create table if not exists public.profiles (
  id uuid primary key references auth.users(id) on delete cascade,
  full_name text,
  email text,
  photo_url text,
  joined_at timestamp with time zone default now(),
  partner_id uuid references auth.users(id),
  invitation_code text unique,
  is_active boolean default true
);

-- Create 'question_categories' table
create table if not exists public.question_categories (
  id uuid primary key default gen_random_uuid(),
  name text not null unique,
  icon text,
  created_at timestamp with time zone default now()
);

-- Create 'questions' table
create table if not exists public.questions (
  id uuid primary key default gen_random_uuid(),
  category_id uuid references public.question_categories(id) on delete set null,
  text text not null,
  visibility text default 'public',
  created_at timestamp with time zone default now()
);

-- Create 'answers' table
create table if not exists public.answers (
  id uuid primary key default gen_random_uuid(),
  question_id uuid references public.questions(id) on delete cascade,
  user_id uuid references auth.users(id) on delete cascade,
  value integer check (value >= 0 and value <= 100),
  created_at timestamp with time zone default now()
);

-- Create 'sessions' table
create table if not exists public.sessions (
  id uuid primary key default gen_random_uuid(),
  created_by uuid references auth.users(id),
  partner_id uuid references auth.users(id),
  title text,
  scheduled_at timestamp with time zone,
  completed_at timestamp with time zone,
  created_at timestamp with time zone default now()
);

-- Create 'session_questions' table
create table if not exists public.session_questions (
  id uuid primary key default gen_random_uuid(),
  session_id uuid references public.sessions(id) on delete cascade,
  question_id uuid references public.questions(id) on delete cascade,
  order_number integer,
  created_at timestamp with time zone default now()
);

-- Seed initial categories
insert into public.question_categories (name, icon)
values 
  ('Communication', '🗣️'),
  ('Spicy', '🌶️'),
  ('Intimacy', '💞'),
  ('Kink', '🖤')
on conflict (name) do nothing;
--------------------------------------