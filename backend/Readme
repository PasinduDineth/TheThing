-- create a User table
create table public.users (
  id uuid not null primary key, -- UUID from auth.users
  email text unique,
  first_name text,
  last_name text,
  username text unique,
  avatar_url text,
  bio text,
  partner_id uuid references public.users(id) on delete set null,
  created_at timestamp with time zone default timezone('utc', now()),
  updated_at timestamp with time zone default timezone('utc', now()),
  deleted_at timestamp with time zone
);

comment on table public.users is 'Extended profile data for each user.';
comment on column public.users.id is 'References the internal Supabase Auth user.';
comment on column public.users.partner_id is 'Links to another user ID in this table to represent their partner.';

-- Automatically insert new users into the public.users table
create or replace function public.handle_new_user()
returns trigger as $$
begin
  insert into public.users (id, email, connectcode)
  values (
    new.id,
    new.email,
    (new.raw_user_meta_data::jsonb->>'connectcode'));
  return new;
end;
$$ language plpgsql security definer;

create trigger on_auth_user_created
  after insert on auth.users
  for each row execute procedure public.handle_new_user();

  ------------------------------------------------------
  DROP FUNCTION handle_new_user() CASCADE;
